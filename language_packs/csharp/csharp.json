{
	"defaultToken": "",
	"tokenPostfix": ".cs",
	"brackets": [
		{
			"open": "{",
			"close": "}",
			"token": "delimiter.curly"
		},
		{
			"open": "[",
			"close": "]",
			"token": "delimiter.square"
		},
		{
			"open": "(",
			"close": ")",
			"token": "delimiter.parenthesis"
		},
		{
			"open": "<",
			"close": ">",
			"token": "delimiter.angle"
		}
	],
	"keywords": [
		"extern",
		"alias",
		"using",
		"bool",
		"decimal",
		"sbyte",
		"byte",
		"short",
		"ushort",
		"int",
		"uint",
		"long",
		"ulong",
		"char",
		"float",
		"double",
		"object",
		"dynamic",
		"string",
		"assembly",
		"is",
		"as",
		"ref",
		"out",
		"this",
		"base",
		"new",
		"typeof",
		"void",
		"checked",
		"unchecked",
		"default",
		"delegate",
		"var",
		"const",
		"if",
		"else",
		"switch",
		"case",
		"while",
		"do",
		"for",
		"foreach",
		"in",
		"break",
		"continue",
		"goto",
		"return",
		"throw",
		"try",
		"catch",
		"finally",
		"lock",
		"yield",
		"from",
		"let",
		"where",
		"join",
		"on",
		"equals",
		"into",
		"orderby",
		"ascending",
		"descending",
		"select",
		"group",
		"by",
		"namespace",
		"partial",
		"class",
		"field",
		"event",
		"method",
		"param",
		"public",
		"protected",
		"internal",
		"private",
		"abstract",
		"sealed",
		"static",
		"struct",
		"readonly",
		"volatile",
		"virtual",
		"override",
		"params",
		"get",
		"set",
		"add",
		"remove",
		"operator",
		"true",
		"false",
		"implicit",
		"explicit",
		"interface",
		"enum",
		"null",
		"async",
		"await",
		"fixed",
		"sizeof",
		"stackalloc",
		"unsafe",
		"nameof",
		"when"
	],
	"namespaceFollows": ["namespace", "using"],
	"parenFollows": ["if", "for", "while", "switch", "foreach", "using", "catch", "when"],
	"operators": [
		"=",
		"??",
		"||",
		"&&",
		"|",
		"^",
		"&",
		"==",
		"!=",
		"<=",
		">=",
		"<<",
		"+",
		"-",
		"*",
		"/",
		"%",
		"!",
		"~",
		"++",
		"--",
		"+=",
		"-=",
		"*=",
		"/=",
		"%=",
		"&=",
		"|=",
		"^=",
		"<<=",
		">>=",
		">>",
		"=>"
	],
	"symbols": {},
	"escapes": {},
	"tokenizer": {
		"root": [
			[
				{},
				{
					"cases": {
						"@namespaceFollows": {
							"token": "keyword.$0",
							"next": "@namespace"
						},
						"@keywords": {
							"token": "keyword.$0",
							"next": "@qualified"
						},
						"@default": {
							"token": "identifier",
							"next": "@qualified"
						}
					}
				}
			],
			{
				"include": "@whitespace"
			},
			[
				{},
				{
					"cases": {
						"$S2==interpolatedstring": {
							"token": "string.quote",
							"next": "@pop"
						},
						"$S2==litinterpstring": {
							"token": "string.quote",
							"next": "@pop"
						},
						"@default": "@brackets"
					}
				}
			],
			[{}, "@brackets"],
			[{}, "@brackets"],
			[
				{},
				{
					"cases": {
						"@operators": "delimiter",
						"@default": ""
					}
				}
			],
			[{}, "number.float"],
			[{}, "number.hex"],
			[{}, "number.hex"],
			[{}, "number"],
			[{}, "delimiter"],
			[{}, "string.invalid"],
			[
				{},
				{
					"token": "string.quote",
					"next": "@string"
				}
			],
			[
				{},
				{
					"token": "string.quote",
					"next": "@litinterpstring"
				}
			],
			[
				{},
				{
					"token": "string.quote",
					"next": "@litstring"
				}
			],
			[
				{},
				{
					"token": "string.quote",
					"next": "@interpolatedstring"
				}
			],
			[{}, "string"],
			[{}, ["string", "string.escape", "string"]],
			[{}, "string.invalid"]
		],
		"qualified": [
			[
				{},
				{
					"cases": {
						"@keywords": {
							"token": "keyword.$0"
						},
						"@default": "identifier"
					}
				}
			],
			[{}, "delimiter"],
			["", "", "@pop"]
		],
		"namespace": [
			{
				"include": "@whitespace"
			},
			[{}, "namespace"],
			[{}, "delimiter"],
			["", "", "@pop"]
		],
		"comment": [
			[{}, "comment"],
			["\\*/", "comment", "@pop"],
			[{}, "comment"]
		],
		"string": [
			[{}, "string"],
			[{}, "string.escape"],
			[{}, "string.escape.invalid"],
			[
				{},
				{
					"token": "string.quote",
					"next": "@pop"
				}
			]
		],
		"litstring": [
			[{}, "string"],
			[{}, "string.escape"],
			[
				{},
				{
					"token": "string.quote",
					"next": "@pop"
				}
			]
		],
		"litinterpstring": [
			[{}, "string"],
			[{}, "string.escape"],
			[{}, "string.escape"],
			[{}, "string.escape"],
			[
				{},
				{
					"token": "string.quote",
					"next": "root.litinterpstring"
				}
			],
			[
				{},
				{
					"token": "string.quote",
					"next": "@pop"
				}
			]
		],
		"interpolatedstring": [
			[{}, "string"],
			[{}, "string.escape"],
			[{}, "string.escape.invalid"],
			[{}, "string.escape"],
			[{}, "string.escape"],
			[
				{},
				{
					"token": "string.quote",
					"next": "root.interpolatedstring"
				}
			],
			[
				{},
				{
					"token": "string.quote",
					"next": "@pop"
				}
			]
		],
		"whitespace": [
			[{}, "directive.csx"],
			[{}, "namespace.cpp"],
			[{}, ""],
			[{}, "comment", "@comment"],
			[{}, "comment"]
		]
	}
}
